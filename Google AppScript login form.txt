const LOGIN_SHEET_ID = "1HHcKiZJ28qXgu6Smq8r-UXcnzDUzsrbvAK9E3bsfATQ"; 
const CACHE = CacheService.getScriptCache();

function doPost(e) {
  let body = {};
  try {
    body = JSON.parse(e.postData && e.postData.contents ? e.postData.contents : '{}');
  } catch (err) {
    return json({ ok: false, error: "Invalid JSON" });
  }

  if (body.cmd && body.cmd.toLowerCase() === "login") {
    return handleLogin(body);
  }

  return json({ ok: false, error: "Unknown command" });
}

// ðŸ”‘ Handle login
function handleLogin(body) {
  const sh = SpreadsheetApp.openById(LOGIN_SHEET_ID).getSheetByName("Judges");
  if (!sh) return json({ ok: false, error: "Judges sheet not found" });

  const values = sh.getDataRange().getValues();
  const headers = values[0].map(String);

  const userCol = headers.findIndex(h => h.trim().toLowerCase() === "username");
  const passCol = headers.findIndex(h => h.trim().toLowerCase() === "password");

  for (let r = 1; r < values.length; r++) {
    if (body.username === values[r][userCol] && body.password === values[r][passCol]) {
      const token = Utilities.getUuid();
      CACHE.put(token, "valid", 3600); // token valid 1 hour
      return json({ ok: true, token });
    }
  }

  return json({ ok: false, error: "Invalid username or password" });
}

// âœ… Check token validity (used by scoring app)
function validateToken(token) {
  return CACHE.get(token) === "valid";
}

// JSON response helper
function json(obj) {
  return ContentService.createTextOutput(JSON.stringify(obj))
    .setMimeType(ContentService.MimeType.JSON);
}
